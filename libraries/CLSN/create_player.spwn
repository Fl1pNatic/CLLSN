extract obj_props
gs = import gamescene
invis = 1g
lock = 2g

topdown360 = (x_grid: @number, y_grid: @number, color: @array = [255, 255, 255]) {
    col = ?c
    col.set(color[0],color[1],color[2])
    direc = counter(0)
    playerG = ?g
    collision = ?g
    moveWPlayer = ?g

    $.add(obj{ 
        OBJ_ID: 1838,
        X: ((x_grid-1)*30)+7.5,
        Y: (y_grid*30)-7.5, 
        COLOR: col,
        DONT_FADE: true, DONT_ENTER: true, 
        GROUPS: [collision, lock, moveWPlayer]
    }) // Player character
    $.add(obj{ 
        OBJ_ID: 1838,
        X: ((x_grid-1)*30)+7.5,
        Y: ((y_grid-1)*30)+7.5, 
        COLOR: col,
        ROTATION: 270,
        DONT_FADE: true, DONT_ENTER: true, 
        GROUPS: [collision, lock, moveWPlayer]
    }) // Player character 
    $.add(obj{ 
        OBJ_ID: 1838,
        X: (x_grid*30)-7.5,
        Y: ((y_grid-1)*30)+7.5, 
        COLOR: col,
        ROTATION: 180,
        DONT_FADE: true, DONT_ENTER: true, 
        GROUPS: [collision, lock, moveWPlayer]
    }) // Player character 
    $.add(obj{ 
        OBJ_ID: 1838,
        X: (x_grid*30)-7.5,
        Y: (y_grid*30)-7.5, 
        COLOR: col,
        ROTATION: 90,
        DONT_FADE: true, DONT_ENTER: true, 
        GROUPS: [collision, lock, moveWPlayer]
    }) // Player character  
    
    $.add(obj{ 
        OBJ_ID: 1764,
        X: ((x_grid-1)*30)+15,
        Y: ((y_grid-1)*30)+15, 
        GROUPS: [playerG, collision, lock, moveWPlayer, invis]
    }) // Player rotation

    arrow = ?g
    arrowCol = ?c
    $.add(obj {
        OBJ_ID: 1603,
        X: ((x_grid-1)*30)+15,
        Y: ((y_grid)*30)+15,  
        COLOR: arrowCol,
        ROTATION: 270,
        DONT_FADE: true, DONT_ENTER: true, 
        GROUPS: [arrow, lock, moveWPlayer]
    }) // Rotation arrow

    is_pressed = counter(0)
    gs.button_a().on_triggered(!{ is_pressed += 1 
        while_loop(() => is_pressed == 1, (){
            arrow.rotate(playerG, -1, 0.005) // Rotates an arrow around a player
            direc -= 1 // Counter variable for the players direction
        })
    })
    gs.button_a_end().on_triggered(!{ is_pressed -= 1 })
}

return {
    topdown360
}